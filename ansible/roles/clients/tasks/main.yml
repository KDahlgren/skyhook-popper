# e.g.  ansible-playbook -K -b playbook.yml --extra-vars="format_username=kat num_osds=1 format_device=sda4 release_name=luminous so_path=/proj/skyhook-PG0/kat_stuff/libcls_tabular.so.1.0.0 ceph_conf=ceph.conf_osize128_wsize256 osd_device_path=/dev/sdb" -vv

- name: "copying client files0"
  shell: cp {{ item }} "{{ local_home }}" ;
  with_items:
    - /proj/skyhook-PG0/projscripts/mount-sd*
    - /proj/skyhook-PG0/projscripts/zap-sd*
    - /proj/skyhook-PG0/projscripts/format-*
    - /proj/skyhook-PG0/projscripts/get_nodes.sh
    - /proj/skyhook-PG0/projscripts/cluster_setup_copy_ssh_keys.sh

- name: "making the node list"
  shell: bash get_nodes.sh {{ num_osds }} ;

- name: "running ssh setup"
  shell: sh cluster_setup_copy_ssh_keys.sh ;

- name: "running format sda4"
  shell: sh format-device.sh {{ format_username }} {{ format_device }} ; 
  ignore_errors: yes

- name: "clone skyhook repo"
  shell: |
    cd /mnt/sda4 ; 
    git clone https://github.com/uccross/skyhook-ceph.git ; 
    cd skyhook-ceph ; 
    git checkout skyhook-transforms ;

- name: "make cluster dir"
  file:
    path: "{{ local_home }}/cluster"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: "install ceph-deploy"
  shell: |
    chmod -R '755' "{{ local_home }}/cluster" ;
    apt-get -f install ; 
    apt-get install -y python-virtualenv ; 
    cd "{{ local_home }}/cluster" ;
    virtualenv env ;
    env/bin/pip install ceph-deploy==1.5.38 ;

- name: "installing release on all hosts"
  shell: |
    cd "{{ local_home }}/cluster" ;
    env/bin/ceph-deploy install --release={{ release_name }} {{ item }} ;
  with_inventory_hostnames:
    - all

- name: "spinning up a new cluster"
  shell: |
    cd "{{ local_home }}/cluster" ;
    env/bin/ceph-deploy new client0 ;
  ignore_errors: yes

- name: "overwriting ceph.conf part0"
  copy: src="../../../ceph_conf/{{ ceph_conf }}"
        dest="{{ local_home }}/cluster"
        mode=preserve

- name: "overwriting ceph.conf part1"
  shell: |
    cd "{{ local_home }}/cluster" ;
    mv ceph.conf ceph.conf_default ;
    cat ceph.conf_default >> ceph.conf ;
    cat {{ ceph_conf }} >> ceph.conf ;
    chmod '777' ceph.conf ;

- name: "changing deploy log permissions"
  shell: |
    cd "{{ local_home }}/cluster" ;
    chmod '777' ceph-deploy-ceph.log ;

- name: "spinning up a new monitor"
  shell: |
    cd "{{ local_home }}/cluster" ;
    sudo chmod 766 *.keyring ;
    env/bin/ceph-deploy --overwrite-conf mon create client0 ;
    sudo chmod 766 *.keyring ;
    env/bin/ceph-deploy gatherkeys client0 ;
    sudo chmod 766 *.keyring ;

- name: "zap+create disks"
  vars:
     local_home: "{{ lookup('env','HOME') }}"
  shell: |
    cd "{{ local_home }}/cluster" ;
    env/bin/ceph-deploy osd create {{ item }}:{{ osd_device_path }} ;
    sudo chmod 766 *.keyring ;
  with_inventory_hostnames:
    - osds

- name: "spin up admin"
  shell: |
    cd "{{ local_home }}/cluster" ;
    env/bin/ceph-deploy admin client0 ;
    sudo chmod a+r /etc/ceph/ceph.client.admin.keyring ;
    sudo chmod 766 *.keyring ;

- name: "push configs to osds"
  shell: |
    cd "{{ local_home }}/cluster" ;
    env/bin/ceph-deploy config push osd0 ;
    sudo chmod 766 *.keyring ;

- name: "spin up mgr"
  shell: |
    cd "{{ local_home }}/cluster" ;
    env/bin/ceph-deploy mgr create client0 ;
    sudo chmod 766 *.keyring ;

- name: "check install with testpool and test objects"
  shell: |
    ceph osd pool create testpool 64 64 replicated ; #or rados mkpool testpool
    ceph osd pool set testpool size 1 ; #need to set the size
    ceph osd pool application enable testpool mytest ;
    rados -p testpool put testobj0 /proj/skyhook-PG0/kat_stuff/dataset_obj_v_file_100mb.txt ;
    rados -p testpool put testobj1 /proj/skyhook-PG0/kat_stuff/dataset_obj_v_file_100mb.txt ;
    rados -p testpool put testobj2 /proj/skyhook-PG0/kat_stuff/dataset_obj_v_file_100mb.txt ;

#- name: "setup skyhook repo"
#  shell: |
#    cd /mnt/sda4/skyhook-ceph ;
#    git checkout {{ skyhook_branch | default( 'skyhook-luminous' ) }} ;
#
#- name: "running install-deps"
#  shell: |
#    cd /mnt/sda4/skyhook-ceph ;
#    ./install-deps.sh ;
#
#- name: "running do_cmake"
#  shell: |
#    cd /mnt/sda4/skyhook-ceph ;
#    ./do_cmake.sh ;
#
#- name: "make run-query"
#  shell: |
#    cd /mnt/sda4/skyhook-ceph/build ;
#    make run-query ;
#
#- name: "test run-query"
#  shell: |
#    cd /mnt/sda4/skyhook-ceph/build ;
#    rados mkpool tpchflatbuf ;
#    ceph osd pool set tpchflatbuf size 1 ;
#    cp /proj/skyhook-PG0/kat_stuff/skyhookdb.testdb.lineitem.oid* . ;
#    yes | PATH=$PATH:bin ../src/progly/rados-store-glob.sh tpchflatbuf  skyhookdb.testdb.lineitem.oid.* ;
#    bin/run-query --num-objs 2 --pool tpchflatbuf --wthreads 1 --qdepth 10 --query flatbuf --select "orderkey,lt,5;linenumber,gt,5;tax,leq,1.01;"  --project-cols orderkey,linenumber,tax,comment --use-cls ;
